{"version":3,"sources":["components/Navbar.js","components/Login.js","components/Register.js","components/Dashboard.js","components/EmployeeList.js","components/CreateEmployee.js","components/EditEmployee.js","components/TestComponent.js","App.js","index.js"],"names":["Navbar","_ref","onLogout","_jsxs","className","children","_jsx","Link","to","onClick","Login","onLogin","userName","setUserName","useState","password","setPassword","navigate","useNavigate","type","value","onChange","e","target","placeholder","async","response","axios","post","concat","localStorage","setItem","data","token","error","console","Register","alert","window","location","href","Dashboard","getItem","handleLogout","removeItem","EmployeeList","employees","setEmployees","useEffect","get","headers","Authorization","fetchEmployees","map","emp","name","email","delete","id","filter","_id","handleDeleteEmployee","CreateEmployee","employee","setEmployee","mobile","designation","gender","course","image","handleCheckboxChange","checked","prevState","onSubmit","preventDefault","log","required","includes","files","EditEmployee","TestComponent","API_URL","App","newEmployee","setNewEmployee","editingEmployee","setEditingEmployee","isLoggedIn","setIsLoggedIn","handleUpdateEmployee","handleLogin","Router","Routes","Route","path","element","onUpdateEmployee","onDeleteEmployee","handleCreateEmployee","formData","FormData","Object","keys","forEach","key","append","put","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2302420b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles/Navbar.css'; // Ensure this path is correct\n\nconst Navbar = ({ onLogout }) => {\n  return (\n    <nav className=\"navbar\">\n      <Link to=\"/dashboard\">Home</Link>\n      <Link to=\"/employee-list\">Employee List</Link>\n      <button onClick={onLogout}>Logout</button>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../api'; // Import the Axios instance\n\n// const Login = () => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate(); // Use the useNavigate hook\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await api.post('/login', { userName, password });\n//       localStorage.setItem('token', response.data.token);\n//       navigate('/dashboard'); // Redirect to the dashboard after login\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={userName}\n//           onChange={(e) => setUserName(e.target.value)}\n//           placeholder=\"Username\"\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           placeholder=\"Password\"\n//           required\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles/Login.css';\n\nconst API_URL = 'http://localhost:5005'; // Backend URL\n\nconst Login = ({ onLogin }) => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n      localStorage.setItem('token', response.data.token);\n      onLogin(); // Notify parent about successful login\n      navigate('/create-employee'); // Redirect to CreateEmployee page\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <input\n        type=\"text\"\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n        placeholder=\"Username\"\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n      />\n      <button onClick={handleLogin}>Login</button>\n    </div>\n  );\n};\n\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './styles/Login.css'; // Ensure this path is correct\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// const Login = ({ onLogin }) => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(`${API_URL}/login`, { username, password });\n//       localStorage.setItem('token', response.data.token);\n//       onLogin();\n//       navigate('/dashboard');\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleLogin}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <button type=\"submit\">Login</button>\n//         <p>\n//           New User? <a href=\"/register\">Register</a>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n","// src/components/Register.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './styles/Register.css';\n\nconst Register = () => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleRegister = async () => {\n    try {\n      await axios.post('http://localhost:5000/register', { userName, password });\n      alert('Registration successful');\n      window.location.href = '/login';\n    } catch (error) {\n      alert('Registration failed');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Register</h2>\n      <input\n        type=\"text\"\n        placeholder=\"User Name\"\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button onClick={handleRegister}>Register</button>\n    </div>\n  );\n};\n\nexport default Register;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './styles/Register.css'; // Ensure this path is correct\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// const Register = ({ onLogin }) => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [email, setEmail] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.post(`${API_URL}/register`, { username, password, email });\n//       onLogin();\n//       navigate('/login');\n//     } catch (error) {\n//       console.error('Error registering:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-container\">\n//       <h2>Register</h2>\n//       <form onSubmit={handleRegister}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <button type=\"submit\">Register</button>\n//         <p>\n//           Already registered? <a href=\"/login\">Click here to login</a>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\n","// // src/components/Dashboard.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import EmployeeForm from './EmployeeForm';\n// import EmployeeList from './EmployeeList';\n\n// const Dashboard = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [selectedEmployee, setSelectedEmployee] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [filteredEmployees, setFilteredEmployees] = useState([]);\n\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:5005/employees', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setEmployees(response.data);\n//         setFilteredEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n//     fetchEmployees();\n//   }, []);\n\n//   useEffect(() => {\n//     if (searchTerm) {\n//       const filtered = employees.filter((employee) =>\n//         employee.name.toLowerCase().includes(searchTerm.toLowerCase())\n//       );\n//       setFilteredEmployees(filtered);\n//     } else {\n//       setFilteredEmployees(employees);\n//     }\n//   }, [searchTerm, employees]);\n\n//   const handleUpdate = (employee) => {\n//     setSelectedEmployee(employee);\n//   };\n\n//   const handleClear = () => {\n//     setSelectedEmployee(null);\n//   };\n\n//   const handleSearchChange = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Dashboard</h2>\n\n//       {/* Search Bar */}\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by name\"\n//           value={searchTerm}\n//           onChange={handleSearchChange}\n//         />\n//       </div>\n\n//       {/* Employee Form */}\n//       <EmployeeForm\n//         selectedEmployee={selectedEmployee}\n//         onClear={handleClear}\n//         onEmployeeChange={setEmployees} // Assuming EmployeeForm updates employees\n//       />\n\n//       {/* Employee List */}\n//       <EmployeeList\n//         employees={filteredEmployees}\n//         onUpdate={handleUpdate}\n//         onEmployeeChange={setEmployees} // Assuming EmployeeList updates employees\n//       />\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n\n// const Dashboard = () => {\n//     const [employees, setEmployees] = useState([]);\n\n//     useEffect(() => {\n//         const fetchEmployees = async () => {\n//             const token = localStorage.getItem('token');\n//             try {\n//                 const response = await fetch('http://localhost:5005/employees', {\n//                     headers: { 'Authorization': `Bearer ${token}` },\n//                 });\n//                 const data = await response.json();\n//                 setEmployees(data);\n//             } catch (error) {\n//                 console.error('Error:', error);\n//             }\n//         };\n\n//         fetchEmployees();\n//     }, []);\n\n//     return (\n//         <div>\n//             <h2>Employee List</h2>\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>Name</th>\n//                         <th>Email</th>\n//                         <th>Mobile No</th>\n//                         <th>Designation</th>\n//                         <th>Gender</th>\n//                         <th>Course</th>\n//                         <th>Image</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {employees.map(emp => (\n//                         <tr key={emp._id}>\n//                             <td>{emp.name}</td>\n//                             <td>{emp.email}</td>\n//                             <td>{emp.mobile}</td>\n//                             <td>{emp.designation}</td>\n//                             <td>{emp.gender}</td>\n//                             <td>{emp.course}</td>\n//                             <td><img src={`http://localhost:5005/${emp.image}`} alt=\"Employee\" width=\"100\" /></td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './styles/Dashboard.css'; // Assuming you have CSS for styling\n\nconst Dashboard = () => {\n  const userName = localStorage.getItem('user');\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    navigate('/');\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"header\">\n        <div className=\"nav\">\n          <Link to=\"/dashboard\">Home</Link>\n          <Link to=\"/employee-list\">EmployeeList</Link>\n        </div>\n        <div className=\"user-info\">\n          {userName} <button onClick={handleLogout}>Logout</button>\n        </div>\n      </div>\n      <div className=\"content\">\n        <h2>Welcome to Admin Panel</h2>\n        {/* <p>Note: Test to be created in MERN for the panel while for API's you need to either use API's built on Node</p> */}\n        {/* <p>Validation Required: Validate all input fields, check login credentials, manage the username on the dashboard using local storage or cookies.</p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // src/components/Dashboard.js\n// import React from 'react';\n\n// const Dashboard = () => {\n//   return (\n//     <div>\n//       <h1>Dashboard</h1>\n//       <p>This is the Dashboard page.</p>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n","// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const EmployeeList = ({ onEdit }) => {\n//   const [employees, setEmployees] = useState([]);\n\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get('/employees', {\n//           headers: {\n//             'Authorization': `Bearer ${localStorage.getItem('token')}`\n//           }\n//         });\n//         setEmployees(response.data);\n//       } catch (err) {\n//         console.error(err);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`/employees/${id}`, {\n//         headers: {\n//           'Authorization': `Bearer ${localStorage.getItem('token')}`\n//         }\n//       });\n//       setEmployees(employees.filter(employee => employee._id !== id));\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee List</h2>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Mobile</th>\n//             <th>Designation</th>\n//             <th>Gender</th>\n//             <th>Course</th>\n//             <th>Image</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {employees.map(employee => (\n//             <tr key={employee._id}>\n//               <td>{employee.name}</td>\n//               <td>{employee.email}</td>\n//               <td>{employee.mobile}</td>\n//               <td>{employee.designation}</td>\n//               <td>{employee.gender}</td>\n//               <td>{employee.course}</td>\n//               <td>\n//                 {employee.image && (\n//                   <img\n//                     src={`http://localhost:5005/${employee.image}`}\n//                     alt={employee.name}\n//                     style={{ width: '100px', height: 'auto' }}\n//                   />\n//                 )}\n//               </td>\n//               <td>\n//                 <button onClick={() => onEdit(employee)}>Edit</button>\n//                 <button onClick={() => handleDelete(employee._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // src/components/EmployeeList.js\n// import React from 'react';\n// import axios from 'axios';\n\n// const EmployeeList = ({ employees, onUpdate }) => {\n//   const handleDelete = async (id) => {\n//     const token = localStorage.getItem('token');\n//     try {\n//       await axios.delete(`http://localhost:5005/employees/${id}`, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       window.location.reload(); // Refresh the list after deletion\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee List</h2>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Mobile No</th>\n//             <th>Designation</th>\n//             <th>Gender</th>\n//             <th>Course</th>\n//             <th>Image</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {employees.map(employee => (\n//             <tr key={employee._id}>\n//               <td>{employee.name}</td>\n//               <td>{employee.email}</td>\n//               <td>{employee.mobile}</td>\n//               <td>{employee.designation}</td>\n//               <td>{employee.gender}</td>\n//               <td>{employee.course}</td>\n//               <td>\n//                 {employee.image && <img src={`http://localhost:5005/${employee.image}`} alt=\"Employee\" style={{ width: '50px' }} />}\n//               </td>\n//               <td>\n//                 <button onClick={() => onUpdate(employee)}>Edit</button>\n//                 <button onClick={() => handleDelete(employee._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './EmployeeList.css'; // Assuming you have CSS for styling\n\n// const EmployeeList = () => {\n//   const navigate = useNavigate();\n//   const employees = [\n//     // Example data\n//     { id: 1, name: 'John Doe', email: 'john@example.com', mobile: '1234567890', designation: 'HR', gender: 'M', course: 'MCA', createdate: '2024-01-01' },\n//     { id: 2, name: 'Jane Smith', email: 'jane@example.com', mobile: '0987654321', designation: 'Manager', gender: 'F', course: 'BCA', createdate: '2024-01-02' },\n//     // Add more employees here\n//   ];\n\n//   return (\n//     <div className=\"employee-list\">\n//       <div className=\"header\">\n//         <div className=\"nav\">\n//           <Link to=\"/dashboard\">Home</Link>\n//           <Link to=\"/employee-list\">EmployeeList</Link>\n//         </div>\n//         <div className=\"user-info\">\n//           Suruchi Sharma <button onClick={() => navigate('/')}>Logout</button>\n//         </div>\n//       </div>\n//       <div className=\"content\">\n//         <h2>Employee List</h2>\n//         <button onClick={() => navigate('/create-employee')}>Create Employee</button>\n//         <input type=\"text\" placeholder=\"Search\" />\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>UniqueId</th>\n//               <th>Image</th>\n//               <th>Name</th>\n//               <th>Email</th>\n//               <th>Mobile No</th>\n//               <th>Designation</th>\n//               <th>Gender</th>\n//               <th>Course</th>\n//               <th>Createdate</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {employees.map(emp => (\n//               <tr key={emp.id}>\n//                 <td>{emp.id}</td>\n//                 <td><img src=\"path/to/image\" alt=\"Employee\" /></td>\n//                 <td>{emp.name}</td>\n//                 <td>{emp.email}</td>\n//                 <td>{emp.mobile}</td>\n//                 <td>{emp.designation}</td>\n//                 <td>{emp.gender}</td>\n//                 <td>{emp.course}</td>\n//                 <td>{emp.createdate}</td>\n//                 <td>\n//                   <button onClick={() => navigate(`/edit-employee/${emp.id}`)}>Edit</button>\n//                   <button>Delete</button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// src/components/EmployeeList.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles/EmployeeList.css';\n\nconst EmployeeList = () => {\n  const [employees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get('http://localhost:5005/employees', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n\n    fetchEmployees();\n  }, []);\n\n  const handleDeleteEmployee = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5005/employees/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(employees.filter(emp => emp._id !== id));\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n\n  return (\n    <div className=\"employee-list-container\">\n      <h2>Employee List</h2>\n      <Link to=\"/create-employee\" className=\"employee-list-button\">Create Employee</Link>\n      <ul>\n        {employees.map(emp => (\n          <li key={emp._id}>\n            <span>{emp.name} - {emp.email}</span>\n            <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n            <Link to={`/edit-employee/${emp._id}`}>Edit</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default EmployeeList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles/EmployeeList.css';\n\n// const EmployeeList = ({ employees, onUpdateEmployee, onDeleteEmployee }) => {\n//   const [employeeList, setEmployeeList] = useState(employees || []);\n\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5005/employees', {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setEmployeeList(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     if (!employees) {\n//       fetchEmployees();\n//     }\n//   }, [employees]);\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5005/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       onDeleteEmployee(id);\n//       setEmployeeList(employeeList.filter((employee) => employee._id !== id));\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"employee-list-container\">\n//       <h2>Employee List</h2>\n//       <Link to=\"/create-employee\">\n//         <button className=\"create-employee-btn\">Create Employee</button>\n//       </Link>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Mobile</th>\n//             <th>Designation</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {employeeList.map((employee) => (\n//             <tr key={employee._id}>\n//               <td>{employee.name}</td>\n//               <td>{employee.email}</td>\n//               <td>{employee.mobile}</td>\n//               <td>{employee.designation}</td>\n//               <td>\n//                 <Link to={`/edit-employee/${employee._id}`}>\n//                   <button>Edit</button>\n//                 </Link>\n//                 <button onClick={() => handleDelete(employee._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default EmployeeList;\n","// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CreateEmployee = () => {\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n\n//   const handleChange = (e) => {\n//     setForm({\n//       ...form,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setForm({\n//       ...form,\n//       image: e.target.files[0],\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(form).forEach((key) => {\n//       formData.append(key, form[key]);\n//     });\n//     await axios.post('http://localhost:5000/employees', formData, {\n//       headers: {\n//         'x-auth-token': localStorage.getItem('token'),\n//         'Content-Type': 'multipart/form-data',\n//       },\n//     });\n//     window.location.href = '/dashboard';\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={handleChange} required />\n//       <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\n//       <input type=\"text\" name=\"mobile\" placeholder=\"Mobile No\" onChange={handleChange} required />\n//       <select name=\"designation\" onChange={handleChange} required>\n//         <option value=\"\">Select Designation</option>\n//         <option value=\"HR\">HR</option>\n//         <option value=\"Manager\">Manager</option>\n//         <option value=\"Sales\">Sales</option>\n//       </select>\n//       <input type=\"radio\" name=\"gender\" value=\"M\" onChange={handleChange} required /> Male\n//       <input type=\"radio\" name=\"gender\" value=\"F\" onChange={handleChange} required /> Female\n//       <input type=\"checkbox\" name=\"course\" value=\"MCA\" onChange={handleChange} /> MCA\n//       <input type=\"checkbox\" name=\"course\" value=\"BCA\" onChange={handleChange} /> BCA\n//       <input type=\"checkbox\" name=\"course\" value=\"BSC\" onChange={handleChange} /> BSC\n//       <input type=\"file\" name=\"image\" onChange={handleFileChange} accept=\"image/jpeg,image/png\" required />\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default CreateEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n\n// const CreateEmployee = () => {\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//     });\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n\n//     const handleFileChange = (e) => {\n//         setFormData({ ...formData, image: e.target.files[0] });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         const formDataToSend = new FormData();\n//         Object.keys(formData).forEach(key => {\n//             formDataToSend.append(key, formData[key]);\n//         });\n\n//         const token = localStorage.getItem('token');\n//         try {\n//             const response = await fetch('http://localhost:5005/employees', {\n//                 method: 'POST',\n//                 headers: { 'Authorization': `Bearer ${token}` },\n//                 body: formDataToSend,\n//             });\n//             const data = await response.json();\n//             if (data.employee) {\n//                 alert('Employee created');\n//             } else {\n//                 alert('Error creating employee');\n//             }\n//         } catch (error) {\n//             console.error('Error:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Create Employee</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\"text\"\n//                     name=\"name\"\n//                     placeholder=\"Name\"\n//                     value={formData.name}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     placeholder=\"Email\"\n//                     value={formData.email}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"mobile\"\n//                     placeholder=\"Mobile No\"\n//                     value={formData.mobile}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     name=\"designation\"\n//                     placeholder=\"Designation\"\n//                     value={formData.designation}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"M\"\n//                     checked={formData.gender === 'M'}\n//                     onChange={handleChange}\n//                 /> Male\n//                 <input\n//                     type=\"radio\"\n//                     name=\"gender\"\n//                     value=\"F\"\n//                     checked={formData.gender === 'F'}\n//                     onChange={handleChange}\n//                 /> Female\n//                 <input\n//                     type=\"checkbox\"\n//                     name=\"course\"\n//                     value=\"MCA\"\n//                     checked={formData.course === 'MCA'}\n//                     onChange={handleChange}\n//                 /> MCA\n//                 <input\n//                     type=\"checkbox\"\n//                     name=\"course\"\n//                     value=\"BCA\"\n//                     checked={formData.course === 'BCA'}\n//                     onChange={handleChange}\n//                 /> BCA\n//                 <input\n//                     type=\"checkbox\"\n//                     name=\"course\"\n//                     value=\"BSC\"\n//                     checked={formData.course === 'BSC'}\n//                     onChange={handleChange}\n//                 /> BSC\n//                 <input\n//                     type=\"file\"\n//                     name=\"image\"\n//                     onChange={handleFileChange}\n//                 />\n//                 <button type=\"submit\">Submit</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default CreateEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n\n// const CreateEmployee = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFormData({ ...formData, image: e.target.files[0] });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formDataToSend = new FormData();\n//     Object.keys(formData).forEach(key => {\n//       formDataToSend.append(key, formData[key]);\n//     });\n\n//     const token = localStorage.getItem('token');\n//     try {\n//       const response = await fetch('http://localhost:5005/employees', {\n//         method: 'POST',\n//         headers: { 'Authorization': `Bearer ${token}` },\n//         body: formDataToSend,\n//       });\n//       const data = await response.json();\n//       if (data.employee) {\n//         alert('Employee created');\n//       } else {\n//         alert('Error creating employee');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Create Employee</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           placeholder=\"Name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           placeholder=\"Mobile No\"\n//           value={formData.mobile}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"designation\"\n//           placeholder=\"Designation\"\n//           value={formData.designation}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"M\"\n//           checked={formData.gender === 'M'}\n//           onChange={handleChange}\n//         /> Male\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"F\"\n//           checked={formData.gender === 'F'}\n//           onChange={handleChange}\n//         /> Female\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"MCA\"\n//           checked={formData.course === 'MCA'}\n//           onChange={handleChange}\n//         /> MCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BCA\"\n//           checked={formData.course === 'BCA'}\n//           onChange={handleChange}\n//         /> BCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BSC\"\n//           checked={formData.course === 'BSC'}\n//           onChange={handleChange}\n//         /> BSC\n//         <input\n//           type=\"file\"\n//           name=\"image\"\n//           onChange={handleFileChange}\n//         />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './styles/CreateEmployee.css'; // Assuming you have CSS for styling\n\nconst CreateEmployee = () => {\n  const [employee, setEmployee] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    designation: 'HR',\n    gender: 'M',\n    course: [],\n    image: null,\n  });\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Add validation and submit logic here\n    console.log('Employee data:', employee);\n    navigate('/employee-list');\n  };\n\n  const handleCheckboxChange = (e) => {\n    const { value, checked } = e.target;\n    if (checked) {\n      setEmployee((prevState) => ({\n        ...prevState,\n        course: [...prevState.course, value],\n      }));\n    } else {\n      setEmployee((prevState) => ({\n        ...prevState,\n        course: prevState.course.filter((course) => course !== value),\n      }));\n    }\n  };\n\n  return (\n    <div className=\"create-employee\">\n      <div className=\"header\">\n        <div className=\"nav\">\n          <Link to=\"/dashboard\">Home</Link>\n          <Link to=\"/employee-list\">EmployeeList</Link>\n        </div>\n        <div className=\"user-info\">\n          Suruchi Sharma <button onClick={() => navigate('/')}>Logout</button>\n        </div>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <h2>Create Employee</h2>\n        <div>\n          <input\n            type=\"text\"\n            value={employee.name}\n            onChange={(e) => setEmployee({ ...employee, name: e.target.value })}\n            placeholder=\"Name\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"email\"\n            value={employee.email}\n            onChange={(e) => setEmployee({ ...employee, email: e.target.value })}\n            placeholder=\"Email\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            value={employee.mobile}\n            onChange={(e) => setEmployee({ ...employee, mobile: e.target.value })}\n            placeholder=\"Mobile No\"\n            required\n          />\n        </div>\n        <div>\n          <select\n            value={employee.designation}\n            onChange={(e) => setEmployee({ ...employee, designation: e.target.value })}\n            required\n          >\n            <option value=\"HR\">HR</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Sales\">Sales</option>\n            <option value=\"Developer\">Developer</option>\n          </select>\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"M\"\n              checked={employee.gender === 'M'}\n              onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n            />\n            Male\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"F\"\n              checked={employee.gender === 'F'}\n              onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n            />\n            Female\n          </label>\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"MCA\"\n              checked={employee.course.includes('MCA')}\n              onChange={handleCheckboxChange}\n            />\n            MCA\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"BCA\"\n              checked={employee.course.includes('BCA')}\n              onChange={handleCheckboxChange}\n            />\n            BCA\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"BE\"\n              checked={employee.course.includes('BE')}\n              onChange={handleCheckboxChange}\n            />\n            BE\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"B-Tech\"\n              checked={employee.course.includes('B-Tech')}\n              onChange={handleCheckboxChange}\n            />\n            B-Tech\n          </label>\n        </div>\n        <div>\n          <input\n            type=\"file\"\n            onChange={(e) => setEmployee({ ...employee, image: e.target.files[0] })}\n            required\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // src/components/CreateEmployee.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './styles/CreateEmployee.css';\n\n// const CreateEmployee = () => {\n//   const [employeeData, setEmployeeData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n\n//   const handleChange = (e) => {\n//     setEmployeeData({ ...employeeData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setEmployeeData({ ...employeeData, image: e.target.files[0] });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(employeeData).forEach(key => formData.append(key, employeeData[key]));\n\n//     try {\n//       await axios.post('http://localhost:5005/employees', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       alert('Employee created successfully!');\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-employee-container\">\n//       <h2>Create Employee</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={employeeData.name}\n//           onChange={handleChange}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={employeeData.email}\n//           onChange={handleChange}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           value={employeeData.mobile}\n//           onChange={handleChange}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <select\n//           name=\"designation\"\n//           value={employeeData.designation}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">Select Designation</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Manager\">Manager</option>\n//           <option value=\"Sales\">Sales</option>\n//           <option value=\"Developer\">Developer</option>\n//         </select>\n//         <div>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Male\"\n//               checked={employeeData.gender === 'Male'}\n//               onChange={handleChange}\n//             />\n//             Male\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Female\"\n//               checked={employeeData.gender === 'Female'}\n//               onChange={handleChange}\n//             />\n//             Female\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"MCA\"\n//               checked={employeeData.course.includes('MCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'MCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'MCA') });\n//                 }\n//               }}\n//             />\n//             MCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BCA\"\n//               checked={employeeData.course.includes('BCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BCA') });\n//                 }\n//               }}\n//             />\n//             BCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BSC\"\n//               checked={employeeData.course.includes('BSC')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BSC'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BSC') });\n//                 }\n//               }}\n//             />\n//             BSC\n//           </label>\n//         </div>\n//         <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateEmployee;\n","// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const EditEmployee = ({ match }) => {\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n\n//   useEffect(() => {\n//     // Fetch employee details by ID\n//     const fetchEmployee = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/employees/${match.params.id}`, {\n//           headers: {\n//             'x-auth-token': localStorage.getItem('token'),\n//           },\n//         });\n//         setForm(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employee:', error);\n//       }\n//     };\n\n//     fetchEmployee();\n//   }, [match.params.id]);\n\n//   const handleChange = (e) => {\n//     const { name, value, type, checked } = e.target;\n//     if (type === 'checkbox') {\n//       setForm((prevForm) => ({\n//         ...prevForm,\n//         course: checked\n//           ? [...prevForm.course, value]\n//           : prevForm.course.filter((c) => c !== value),\n//       }));\n//     } else {\n//       setForm({\n//         ...form,\n//         [name]: value,\n//       });\n//     }\n//   };\n\n//   const handleFileChange = (e) => {\n//     setForm({\n//       ...form,\n//       image: e.target.files[0],\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(form).forEach((key) => {\n//       if (Array.isArray(form[key])) {\n//         form[key].forEach((item) => formData.append(key, item));\n//       } else {\n//         formData.append(key, form[key]);\n//       }\n//     });\n\n//     try {\n//       await axios.put(`http://localhost:5000/employees/${match.params.id}`, formData, {\n//         headers: {\n//           'x-auth-token': localStorage.getItem('token'),\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       console.log('Employee updated successfully');\n//       window.location.href = '/dashboard'; // Redirect or update UI as needed\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   const handleDelete = async () => {\n//     try {\n//       await axios.delete(`http://localhost:5000/employees/${match.params.id}`, {\n//         headers: {\n//           'x-auth-token': localStorage.getItem('token'),\n//         },\n//       });\n//       console.log('Employee deleted successfully');\n//       window.location.href = '/dashboard'; // Redirect to dashboard or update UI as needed\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Edit Employee</h1>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={form.name}\n//           placeholder=\"Name\"\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={form.email}\n//           placeholder=\"Email\"\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           value={form.mobile}\n//           placeholder=\"Mobile No\"\n//           onChange={handleChange}\n//           required\n//         />\n//         <select name=\"designation\" value={form.designation} onChange={handleChange} required>\n//           <option value=\"\">Select Designation</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Manager\">Manager</option>\n//           <option value=\"Sales\">Sales</option>\n//         </select>\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"M\"\n//           checked={form.gender === 'M'}\n//           onChange={handleChange}\n//           required\n//         /> Male\n//         <input\n//           type=\"radio\"\n//           name=\"gender\"\n//           value=\"F\"\n//           checked={form.gender === 'F'}\n//           onChange={handleChange}\n//           required\n//         /> Female\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"MCA\"\n//           checked={form.course.includes('MCA')}\n//           onChange={handleChange}\n//         /> MCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BCA\"\n//           checked={form.course.includes('BCA')}\n//           onChange={handleChange}\n//         /> BCA\n//         <input\n//           type=\"checkbox\"\n//           name=\"course\"\n//           value=\"BSC\"\n//           checked={form.course.includes('BSC')}\n//           onChange={handleChange}\n//         /> BSC\n//         <input\n//           type=\"file\"\n//           name=\"image\"\n//           onChange={handleFileChange}\n//           accept=\"image/jpeg,image/png\"\n//         />\n//         <button type=\"submit\">Update</button>\n//       </form>\n//       <button onClick={handleDelete} style={{ marginTop: '10px', backgroundColor: 'red', color: 'white' }}>\n//         Delete Employee\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default EditEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import api from '../api'; // Import the Axios instance\n// import { useNavigate, useParams } from 'react-router-dom';\n\n// const EditEmployee = () => {\n//   const [employee, setEmployee] = useState({});\n//   const [image, setImage] = useState(null);\n//   const navigate = useNavigate(); // For navigation\n//   const { id } = useParams(); // Get the employee ID from URL\n\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       try {\n//         const response = await api.get(`/employees/${id}`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setEmployee(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employee:', error);\n//       }\n//     };\n//     fetchEmployee();\n//   }, [id]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append('name', employee.name);\n//     formData.append('email', employee.email);\n//     formData.append('mobile', employee.mobile);\n//     formData.append('designation', employee.designation);\n//     formData.append('gender', employee.gender);\n//     formData.append('course', employee.course);\n//     if (image) formData.append('image', image);\n\n//     try {\n//       await api.put(`/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       navigate('/dashboard'); // Redirect to dashboard after updating the employee\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Edit Employee</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={employee.name || ''}\n//           onChange={(e) => setEmployee({ ...employee, name: e.target.value })}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           value={employee.email || ''}\n//           onChange={(e) => setEmployee({ ...employee, email: e.target.value })}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={employee.mobile || ''}\n//           onChange={(e) => setEmployee({ ...employee, mobile: e.target.value })}\n//           placeholder=\"Mobile\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={employee.designation || ''}\n//           onChange={(e) => setEmployee({ ...employee, designation: e.target.value })}\n//           placeholder=\"Designation\"\n//           required\n//         />\n//         <select\n//           value={employee.gender || 'Male'}\n//           onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n//         >\n//           <option value=\"Male\">Male</option>\n//           <option value=\"Female\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           value={employee.course || ''}\n//           onChange={(e) => setEmployee({ ...employee, course: e.target.value })}\n//           placeholder=\"Course\"\n//           required\n//         />\n//         <input\n//           type=\"file\"\n//           onChange={(e) => setImage(e.target.files[0])}\n//         />\n//         <button type=\"submit\">Update Employee</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default EditEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './styles/EditEmployee.css'; // Assuming you have CSS for styling\n\nconst EditEmployee = () => {\n  const [employee, setEmployee] = useState({\n    name: 'Prabhat Kumar',\n    email: 'hcgupta@cstech.in',\n    mobile: '954010044',\n    designation: 'HR',\n    gender: 'M',\n    course: ['MCA'],\n    image: null,\n  });\n\n  const navigate = useNavigate();\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    // Add update logic here\n    console.log('Updated Employee data:', employee);\n    navigate('/employee-list');\n  };\n\n  return (\n    <div className=\"edit-employee\">\n      <div className=\"header\">\n        <div className=\"nav\">\n          <Link to=\"/dashboard\">Home</Link>\n          <Link to=\"/employee-list\">EmployeeList</Link>\n        </div>\n        <div className=\"user-info\">\n          Suruchi Sharma <button onClick={() => navigate('/')}>Logout</button>\n        </div>\n      </div>\n      <form onSubmit={handleUpdate}>\n        <h2>Edit Employee</h2>\n        <div>\n          <input\n            type=\"text\"\n            value={employee.name}\n            onChange={(e) => setEmployee({ ...employee, name: e.target.value })}\n            placeholder=\"Name\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"email\"\n            value={employee.email}\n            onChange={(e) => setEmployee({ ...employee, email: e.target.value })}\n            placeholder=\"Email\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            value={employee.mobile}\n            onChange={(e) => setEmployee({ ...employee, mobile: e.target.value })}\n            placeholder=\"Mobile No\"\n            required\n          />\n        </div>\n        <div>\n          <select\n            value={employee.designation}\n            onChange={(e) => setEmployee({ ...employee, designation: e.target.value })}\n            required\n          >\n            <option value=\"HR\">HR</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Sales\">Sales</option>\n            <option value=\"Developer\">Developer</option>\n          </select>\n        </div>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"M\"\n              checked={employee.gender === 'M'}\n              onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n            />\n            Male\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"F\"\n              checked={employee.gender === 'F'}\n              onChange={(e) => setEmployee({ ...employee, gender: e.target.value })}\n            />\n            Female\n          </label>\n        </div>\n        <div>\n          <input\n            type=\"file\"\n            onChange={(e) => setEmployee({ ...employee, image: e.target.files[0] })}\n            required\n          />\n        </div>\n        <button type=\"submit\">Update</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditEmployee;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // src/components/EditEmployee.js\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './styles/EditEmployee.css';\n\n// const EditEmployee = () => {\n//   const { id } = useParams();\n//   const navigate = useNavigate();\n//   const [employeeData, setEmployeeData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: [],\n//     image: null,\n//   });\n\n//   useEffect(() => {\n//     const fetchEmployee = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/employees/${id}`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//         setEmployeeData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employee data:', error);\n//       }\n//     };\n\n//     fetchEmployee();\n//   }, [id]);\n\n//   const handleChange = (e) => {\n//     setEmployeeData({ ...employeeData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setEmployeeData({ ...employeeData, image: e.target.files[0] });\n//   };\n\n//   const handleUpdate = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     Object.keys(employeeData).forEach(key => formData.append(key, employeeData[key]));\n\n//     try {\n//       await axios.put(`http://localhost:5005/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       alert('Employee updated successfully!');\n//       navigate('/employee-list');\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"edit-employee-container\">\n//       <h2>Edit Employee</h2>\n//       <form onSubmit={handleUpdate}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           value={employeeData.name}\n//           onChange={handleChange}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={employeeData.email}\n//           onChange={handleChange}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"mobile\"\n//           value={employeeData.mobile}\n//           onChange={handleChange}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <select\n//           name=\"designation\"\n//           value={employeeData.designation}\n//           onChange={handleChange}\n//           required\n//         >\n//           <option value=\"\">Select Designation</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Manager\">Manager</option>\n//           <option value=\"Sales\">Sales</option>\n//           <option value=\"Developer\">Developer</option>\n//         </select>\n//         <div>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Male\"\n//               checked={employeeData.gender === 'Male'}\n//               onChange={handleChange}\n//             />\n//             Male\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               name=\"gender\"\n//               value=\"Female\"\n//               checked={employeeData.gender === 'Female'}\n//               onChange={handleChange}\n//             />\n//             Female\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"MCA\"\n//               checked={employeeData.course.includes('MCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'MCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'MCA') });\n//                 }\n//               }}\n//             />\n//             MCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BCA\"\n//               checked={employeeData.course.includes('BCA')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BCA'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BCA') });\n//                 }\n//               }}\n//             />\n//             BCA\n//           </label>\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               name=\"course\"\n//               value=\"BSC\"\n//               checked={employeeData.course.includes('BSC')}\n//               onChange={(e) => {\n//                 if (e.target.checked) {\n//                   setEmployeeData({ ...employeeData, course: [...employeeData.course, 'BSC'] });\n//                 } else {\n//                   setEmployeeData({ ...employeeData, course: employeeData.course.filter(course => course !== 'BSC') });\n//                 }\n//               }}\n//             />\n//             BSC\n//           </label>\n//         </div>\n//         <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//         <button type=\"submit\">Update Employee</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default EditEmployee;\n","// src/components/TestComponent.js\nimport React from 'react';\n\nconst TestComponent = () => {\n  return (\n    <div>\n      <h1>Test Component</h1>\n    </div>\n  );\n};\n\nexport default TestComponent;\n","\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = () => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [token, setToken] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       setToken(response.data.token);\n//       // Store the token in localStorage or state as needed\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.post(`${API_URL}/employees`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error creating employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = async (id) => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       await axios.put(`${API_URL}/employees/${id}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error updating employee:', error);\n//     }\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       {/* Form for creating or updating employees */}\n//       <input\n//         type=\"text\"\n//         value={newEmployee.name}\n//         onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//         placeholder=\"Name\"\n//       />\n//       {/* Add other input fields similarly */}\n//       <input\n//         type=\"file\"\n//         onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//       />\n//       <button onClick={handleCreateEmployee}>Create Employee</button>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp._id)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Login />\n//       <EmployeeManagement />\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5005'; // Backend URL\n\n// // Example component for login\n// const Login = ({ onLogin }) => {\n//   const [userName, setUserName] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleLogin = async () => {\n//     try {\n//       const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n//       localStorage.setItem('token', response.data.token);\n//       onLogin(); // Notify parent about successful login\n//     } catch (error) {\n//       console.error('Login error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <input\n//         type=\"text\"\n//         value={userName}\n//         onChange={(e) => setUserName(e.target.value)}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         placeholder=\"Password\"\n//       />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// };\n\n// // Example component for managing employees\n// const EmployeeManagement = () => {\n//   const [employees, setEmployees] = useState([]);\n//   const [newEmployee, setNewEmployee] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     designation: '',\n//     gender: '',\n//     course: '',\n//     image: null,\n//   });\n//   const [editingEmployee, setEditingEmployee] = useState(null);\n\n//   // Fetch all employees\n//   useEffect(() => {\n//     const fetchEmployees = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/employees`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n//           },\n//         });\n//         setEmployees(response.data);\n//       } catch (error) {\n//         console.error('Error fetching employees:', error);\n//       }\n//     };\n\n//     fetchEmployees();\n//   }, []);\n\n//   const handleCreateEmployee = async () => {\n//     const formData = new FormData();\n//     Object.keys(newEmployee).forEach(key => {\n//       formData.append(key, newEmployee[key]);\n//     });\n\n//     try {\n//       if (editingEmployee) {\n//         await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       } else {\n//         await axios.post(`${API_URL}/employees`, formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//             Authorization: `Bearer ${localStorage.getItem('token')}`,\n//           },\n//         });\n//       }\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//       setNewEmployee({\n//         name: '',\n//         email: '',\n//         mobile: '',\n//         designation: '',\n//         gender: '',\n//         course: '',\n//         image: null,\n//       });\n//       setEditingEmployee(null); // Clear the editing state\n//     } catch (error) {\n//       console.error('Error saving employee:', error);\n//     }\n//   };\n\n//   const handleUpdateEmployee = (employee) => {\n//     setNewEmployee(employee);\n//     setEditingEmployee(employee);\n//   };\n\n//   const handleDeleteEmployee = async (id) => {\n//     try {\n//       await axios.delete(`${API_URL}/employees/${id}`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       // Refresh the employee list\n//       const response = await axios.get(`${API_URL}/employees`, {\n//         headers: {\n//           Authorization: `Bearer ${localStorage.getItem('token')}`,\n//         },\n//       });\n//       setEmployees(response.data);\n//     } catch (error) {\n//       console.error('Error deleting employee:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Employee Management</h2>\n//       <form onSubmit={(e) => { e.preventDefault(); handleCreateEmployee(); }}>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.name}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n//           placeholder=\"Name\"\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           value={newEmployee.email}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, email: e.target.value })}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.mobile}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, mobile: e.target.value })}\n//           placeholder=\"Mobile No\"\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           value={newEmployee.designation}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, designation: e.target.value })}\n//           placeholder=\"Designation\"\n//           required\n//         />\n//         <select\n//           value={newEmployee.gender}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, gender: e.target.value })}\n//           required\n//         >\n//           <option value=\"\">Select Gender</option>\n//           <option value=\"M\">Male</option>\n//           <option value=\"F\">Female</option>\n//         </select>\n//         <input\n//           type=\"text\"\n//           value={newEmployee.course}\n//           onChange={(e) => setNewEmployee({ ...newEmployee, course: e.target.value })}\n//           placeholder=\"Course\"\n//           required\n//         />\n//         <input\n//           type=\"file\"\n//           onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n//         />\n//         <button type=\"submit\">{editingEmployee ? 'Update Employee' : 'Create Employee'}</button>\n//       </form>\n\n//       <h3>Employee List</h3>\n//       <ul>\n//         {employees.map(emp => (\n//           <li key={emp._id}>\n//             {emp.name} - {emp.email}\n//             <button onClick={() => handleUpdateEmployee(emp)}>Update</button>\n//             <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// const App = () => {\n//   const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <div>\n//       {!isLoggedIn ? <Login onLogin={handleLogin} /> : <EmployeeManagement />}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport EmployeeList from './components/EmployeeList';\nimport CreateEmployee from './components/CreateEmployee';\nimport EditEmployee from './components/EditEmployee';\nimport TestComponent from './components/TestComponent';\nimport axios from 'axios';\nimport './components/styles/App.css';\n\n\nconst API_URL = 'http://localhost:5005'; // Backend URL\n\nconst App = () => {\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    designation: '',\n    gender: '',\n    course: '',\n    image: null,\n  });\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const fetchEmployees = async () => {\n        try {\n          const response = await axios.get(`${API_URL}/employees`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\n            },\n          });\n          setEmployees(response.data);\n        } catch (error) {\n          console.error('Error fetching employees:', error);\n        }\n      };\n\n      fetchEmployees();\n    }\n  }, [isLoggedIn]);\n\n  const handleCreateEmployee = async () => {\n    const formData = new FormData();\n    Object.keys(newEmployee).forEach(key => {\n      formData.append(key, newEmployee[key]);\n    });\n\n    try {\n      if (editingEmployee) {\n        await axios.put(`${API_URL}/employees/${editingEmployee._id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n      } else {\n        await axios.post(`${API_URL}/employees`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n      }\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n      setNewEmployee({\n        name: '',\n        email: '',\n        mobile: '',\n        designation: '',\n        gender: '',\n        course: '',\n        image: null,\n      });\n      setEditingEmployee(null); // Clear the editing state\n    } catch (error) {\n      console.error('Error saving employee:', error);\n    }\n  };\n\n  const handleUpdateEmployee = (employee) => {\n    setNewEmployee(employee);\n    setEditingEmployee(employee);\n  };\n\n  const handleDeleteEmployee = async (id) => {\n    try {\n      await axios.delete(`${API_URL}/employees/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Router>\n      {isLoggedIn && <Navbar onLogout={handleLogout} />}\n      <Routes>\n        <Route path=\"/\" element={isLoggedIn ? <Dashboard /> : <Register onLogin={handleLogin} />} />\n        <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n        <Route path=\"/register\" element={<Register onLogin={handleLogin} />} />\n        <Route path=\"/dashboard\" element={isLoggedIn ? <Dashboard /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/employee-list\" element={isLoggedIn ? <EmployeeList employees={employees} onUpdateEmployee={handleUpdateEmployee} onDeleteEmployee={handleDeleteEmployee} /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/create-employee\" element={isLoggedIn ? <CreateEmployee newEmployee={newEmployee} setNewEmployee={setNewEmployee} handleCreateEmployee={handleCreateEmployee} /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/edit-employee/:id\" element={isLoggedIn ? <EditEmployee handleUpdateEmployee={handleUpdateEmployee} /> : <Login onLogin={handleLogin} />} />\n        <Route path=\"/test\" element={<TestComponent />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","// // src/index.js\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './components/App'; // Updated import path\n// import { BrowserRouter as Router } from 'react-router-dom';\n// import './index.css'; // Your global styles\n// import './App.css';\n\n// ReactDOM.render(\n//   <Router>\n//     <App />\n//   </Router>,\n//   document.getElementById('root')\n// );\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App'; // Correct path to App.js\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}