{"version":3,"sources":["components/App.js","index.js"],"names":["API_URL","Login","userName","setUserName","useState","password","setPassword","token","setToken","_jsxs","children","_jsx","type","value","onChange","e","target","placeholder","onClick","async","response","axios","post","concat","data","error","console","EmployeeManagement","employees","setEmployees","newEmployee","setNewEmployee","name","email","mobile","designation","gender","course","image","useEffect","get","headers","Authorization","localStorage","getItem","fetchEmployees","files","formData","FormData","Object","keys","forEach","key","append","map","emp","put","id","handleUpdateEmployee","_id","delete","handleDeleteEmployee","App","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.07be2b2c.chunk.js","sourcesContent":["// import React from 'react';\n// import { Route, Routes } from 'react-router-dom';\n// import Login from './Login';\n// import Register from './Register';\n// import Dashboard from './Dashboard';\n// import NotFound from './NotFound';\n\n// const App = () => {\n//   return (\n//     <div>\n//       <header>\n//         <h1>Employee Management System</h1>\n//       </header>\n//       <main>\n//         <Routes>\n//           <Route path=\"/\" element={<Login />} />\n//           <Route path=\"/register\" element={<Register />} />\n//           <Route path=\"/dashboard\" element={<Dashboard />} />\n//           <Route path=\"*\" element={<NotFound />} />\n//         </Routes>\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:5005'; // Backend URL\n\n// Example component for login\nconst Login = () => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState('');\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, { userName, password });\n      setToken(response.data.token);\n      // Store the token in localStorage or state as needed\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <input\n        type=\"text\"\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n        placeholder=\"Username\"\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n      />\n      <button onClick={handleLogin}>Login</button>\n    </div>\n  );\n};\n\n// Example component for managing employees\nconst EmployeeManagement = () => {\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    designation: '',\n    gender: '',\n    course: '',\n    image: null,\n  });\n\n  // Fetch all employees\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/employees`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`, // Use the token from login\n          },\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n\n    fetchEmployees();\n  }, []);\n\n  const handleCreateEmployee = async () => {\n    const formData = new FormData();\n    Object.keys(newEmployee).forEach(key => {\n      formData.append(key, newEmployee[key]);\n    });\n\n    try {\n      await axios.post(`${API_URL}/employees`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error creating employee:', error);\n    }\n  };\n\n  const handleUpdateEmployee = async (id) => {\n    const formData = new FormData();\n    Object.keys(newEmployee).forEach(key => {\n      formData.append(key, newEmployee[key]);\n    });\n\n    try {\n      await axios.put(`${API_URL}/employees/${id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error updating employee:', error);\n    }\n  };\n\n  const handleDeleteEmployee = async (id) => {\n    try {\n      await axios.delete(`${API_URL}/employees/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      // Refresh the employee list\n      const response = await axios.get(`${API_URL}/employees`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Employee Management</h2>\n      {/* Form for creating or updating employees */}\n      <input\n        type=\"text\"\n        value={newEmployee.name}\n        onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\n        placeholder=\"Name\"\n      />\n      {/* Add other input fields similarly */}\n      <input\n        type=\"file\"\n        onChange={(e) => setNewEmployee({ ...newEmployee, image: e.target.files[0] })}\n      />\n      <button onClick={handleCreateEmployee}>Create Employee</button>\n\n      <h3>Employee List</h3>\n      <ul>\n        {employees.map(emp => (\n          <li key={emp._id}>\n            {emp.name} - {emp.email}\n            <button onClick={() => handleUpdateEmployee(emp._id)}>Update</button>\n            <button onClick={() => handleDeleteEmployee(emp._id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <div>\n      <Login />\n      <EmployeeManagement />\n    </div>\n  );\n};\n\nexport default App;\n","// // src/index.js\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './components/App'; // Updated import path\n// import { BrowserRouter as Router } from 'react-router-dom';\n// import './index.css'; // Your global styles\n// import './App.css';\n\n// ReactDOM.render(\n//   <Router>\n//     <App />\n//   </Router>,\n//   document.getElementById('root')\n// );\n\n\n\n// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App';\nimport './App.css'; // Ensure this path is correct\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}